apiVersion: tekton.dev/v1beta1
kind: ClusterTask
metadata:
  name: run-gradle-component-build
  labels:
    app.kubernetes.io/version: "0.1"
  annotations:
    tekton.dev/pipelines.minVersion: "0.12.1"
    tekton.dev/categories: Build Tools
    tekton.dev/tags: build-tool
    tekton.dev/platforms: "linux/amd64,linux/s390x,linux/ppc64le"
spec:
  description: >-
    This Task can be used to run a Gradle build of a component that will be deployed to the sidecar.
  workspaces:
    - name: source
      description: The workspace consisting of gradle project.
    - name: maven-settings
      description: >-
        The workspace consisting of the custom gradle settings
        provided by the user.
  results:
    - name: contaminants
      description: Any community GAVs that have ended up in the final output.
  params:
    - name: URL
      type: string
    - name: TAG
      type: string
    - name: IMAGE
      type: string
      description: Build image
    - name: GOALS
      description: gradle goals to run
      type: array
      default:
        - build
    - name: MAVEN_MIRROR_URL
      description: The Maven repository mirror url
      type: string
      default: http://localhost:2000/maven2
    - name: SERVER_USER
      description: The username for the server
      type: string
      default: ""
    - name: SERVER_PASSWORD
      description: The password for the server
      type: string
      default: ""
    - name: PROXY_USER
      description: The username for the proxy server
      type: string
      default: ""
    - name: PROXY_PASSWORD
      description: The password for the proxy server
      type: string
      default: ""
    - name: PROXY_PORT
      description: Port number for the proxy server
      type: string
      default: ""
    - name: PROXY_HOST
      description: Proxy server Host
      type: string
      default: ""
    - name: PROXY_NON_PROXY_HOSTS
      description: Non proxy server host
      type: string
      default: ""
    - name: PROXY_PROTOCOL
      description: Protocol for the proxy ie http or https
      type: string
      default: "http"
    - name: CONTEXT_DIR
      type: string
      description: >-
        The context directory within the repository for sources on
        which we want to execute gradle goals.
      default: "."
    - name: ENFORCE_VERSION
      type: string
      description: >-
        Some builds are incorrectly tagged with a snapshot version, rather
        than the release version. If this is set then the version will be
        updated to the release version before the build.
      default: ""
    - name: IGNORED_ARTIFACTS
      type: string
      description: >-
        Comma seperated list of artifact names that should not be deployed or checked for contaminants.
      default: ""
  steps:
    - name: git-clone
      image: "gcr.io/tekton-releases/github.com/tektoncd/pipeline/cmd/git-init:v0.21.0"
      resources:
        requests:
          memory: "128Mi"
          cpu: "10m"
        limits:
          memory: "512Mi"
          cpu: "300m"
      args:
        - -path=$(workspaces.source.path)
        - -url=$(params.URL)
        - -revision=$(params.TAG)
    - name: settings
      image: "registry.access.redhat.com/ubi8/ubi:8.5"
      resources:
        requests:
          memory: "128Mi"
          cpu: "10m"
        limits:
          memory: "512Mi"
          cpu: "300m"
      script: |
        #!/usr/bin/env bash

        # fix-permissions-for-builder
        chown 1001:1001 -R $(workspaces.source.path)
    - name: gradle-goals
      image: $(params.IMAGE)
      workingDir: $(workspaces.source.path)/$(params.CONTEXT_DIR)
      args: [ "$(params.GOALS[*])" ]
      script: |
        #we can't use array parameters directly here
        #we pass them in as goals
        gradle $@
    - name: deploy-and-check-for-contaminates
      image: "registry.access.redhat.com/ubi8/ubi:8.5"
      script: |
        #fail here for now
        exit 1
        tar -czf $(workspaces.source.path)/hacbs-jvm-deployment-repo.tar.gz -C $(workspaces.source.path)/hacbs-jvm-deployment-repo .
        curl --data-binary @$(workspaces.source.path)/hacbs-jvm-deployment-repo.tar.gz http://localhost:2000/deploy

        curl --fail http://localhost:2000/deploy/result -o $(results.contaminants.path)
        cat $(workspaces.maven-settings.path)/sidecar.log
      resources:
        requests:
          memory: "128Mi"
          cpu: "10m"
        limits:
          memory: "512Mi"
          cpu: "300m"
  sidecars:
    - image: hacbs-jvm-sidecar
      imagePullPolicy: Always
      env:
        - name: QUARKUS_REST_CLIENT_CACHE_SERVICE_URL
          value: "http://hacbs-jvm-cache"
        - name: QUARKUS_LOG_FILE_ENABLE
          value: "true"
        - name: QUARKUS_LOG_FILE_PATH
          value: "$(workspaces.maven-settings.path)/sidecar.log"
        - name: IGNORED_ARTIFACTS
          value: $(params.IGNORED_ARTIFACTS)
        - name: QUARKUS_VERTX_EVENT_LOOPS_POOL_SIZE
          value: "2"
        - name: QUARKUS_THREAD_POOL_MAX_THREADS
          value: "4"
      name: proxy
      volumeMounts:
        - name: $(workspaces.maven-settings.volume)
          mountPath: $(workspaces.maven-settings.path)
      livenessProbe:
        httpGet:
          path: /q/health/live
          port: 2000
        initialDelaySeconds: 1
        periodSeconds: 3
      readinessProbe:
        httpGet:
          path: /q/health/ready
          port: 2000
        initialDelaySeconds: 1
        periodSeconds: 3
      resources:
        requests:
          memory: "128Mi"
          cpu: "250m"
        limits:
          memory: "512Mi"
          cpu: "500m"
---
apiVersion: tekton.dev/v1beta1
kind: Pipeline
metadata:
  name: run-gradle-component-build
spec:
  results:
    - name: contaminants
      description: Any community GAVs that have ended up in the final output.
      value: $(tasks.run-gradle-component-build.results.contaminants)
  params:
    - name: URL
      type: string
    - name: TAG
      type: string
    - name: IMAGE
      type: string
      description: Build image
    - name: GOALS
      description: gradle goals to run
      type: array
      default:
        - build
    - name: MAVEN_MIRROR_URL
      description: The Maven repository mirror url
      type: string
      default: http://localhost:2000/maven2
    - name: SERVER_USER
      description: The username for the server
      type: string
      default: ""
    - name: SERVER_PASSWORD
      description: The password for the server
      type: string
      default: ""
    - name: PROXY_USER
      description: The username for the proxy server
      type: string
      default: ""
    - name: PROXY_PASSWORD
      description: The password for the proxy server
      type: string
      default: ""
    - name: PROXY_PORT
      description: Port number for the proxy server
      type: string
      default: ""
    - name: PROXY_HOST
      description: Proxy server Host
      type: string
      default: ""
    - name: PROXY_NON_PROXY_HOSTS
      description: Non proxy server host
      type: string
      default: ""
    - name: PROXY_PROTOCOL
      description: Protocol for the proxy ie http or https
      type: string
      default: "http"
    - name: CONTEXT_DIR
      type: string
      description: >-
        The context directory within the repository for sources on
        which we want to execute maven goals.
      default: "."
    - name: ENFORCE_VERSION
      type: string
      description: >-
        Some builds are incorrectly tagged with a snapshot version, rather
        than the release version. If this is set then the version will be
        updated to the release version before the build.
      default: ""
    - name: IGNORED_ARTIFACTS
      type: string
      description: >-
        Comma seperated list of artifact names that should not be deployed or checked for contaminants.
      default: ""
  tasks:
    - name: run-gradle-component-build
      taskRef:
        name: run-gradle-component-build
        kind: ClusterTask
      params:
        - name: URL
          value: "$(params.URL)"
        - name: TAG
          value: "$(params.TAG)"
        - name: IMAGE
          value: "$(params.IMAGE)"
        - name: GOALS
          value: ["$(params.GOALS[*])"]
        - name: MAVEN_MIRROR_URL
          value: "$(params.MAVEN_MIRROR_URL)"
        - name: SERVER_USER
          value: "$(params.SERVER_USER)"
        - name: SERVER_PASSWORD
          value: "$(params.SERVER_PASSWORD)"
        - name: PROXY_USER
          value: "$(params.PROXY_USER)"
        - name: PROXY_PASSWORD
          value: "$(params.PROXY_PASSWORD)"
        - name: PROXY_PORT
          value: "$(params.PROXY_PORT)"
        - name: PROXY_HOST
          value: "$(params.PROXY_HOST)"
        - name: PROXY_NON_PROXY_HOSTS
          value: "$(params.PROXY_NON_PROXY_HOSTS)"
        - name: PROXY_PROTOCOL
          value: "$(params.PROXY_PROTOCOL)"
        - name: CONTEXT_DIR
          value: "$(params.CONTEXT_DIR)"
        - name: ENFORCE_VERSION
          value: "$(params.ENFORCE_VERSION)"
        - name: IGNORED_ARTIFACTS
          value: "$(params.IGNORED_ARTIFACTS)"
