name: Validate PR - Minikube Tests
on:
  pull_request:
    branches: [ main ]
jobs:
  build-controller:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Build and export
        uses: docker/build-push-action@v4
        with:
          context: .
          tags: quay.io/minikube/hacbs-jvm-controller:dev
          outputs: type=docker,dest=/tmp/controller.tar
      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: controller
          path: /tmp/controller.tar
  build-cache:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Build and export
        uses: docker/build-push-action@v4
        with:
          context: java-components
          file: java-components/cache/src/main/docker/Dockerfile.all-in-one
          tags: quay.io/minikube/hacbs-jvm-cache:dev
          outputs: type=docker,dest=/tmp/cache.tar
      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: cache
          path: /tmp/cache.tar
  build-build-request-processor:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Build and export
        uses: docker/build-push-action@v4
        with:
          context: java-components
          file: java-components/build-request-processor/src/main/docker/Dockerfile.all-in-one
          tags: quay.io/minikube/hacbs-jvm-build-request-processor:dev
          outputs: type=docker,dest=/tmp/build-request-processor.tar
      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: build-request-processor
          path: /tmp/build-request-processor.tar
  run-sample-project-tests:
    needs: [build-build-request-processor, build-cache, build-controller]
    runs-on: ubuntu-latest
    name: Minikube Test Sample Project
    steps:
      - uses: actions/checkout@v2
      - name: Download Cache
        uses: actions/download-artifact@v3
        with:
          name: cache
          path: /tmp
      - name: Download Build Request Proessor
        uses: actions/download-artifact@v3
        with:
          name: build-request-processor
          path: /tmp
      - name: Download Controller
        uses: actions/download-artifact@v3
        with:
          name: controller
          path: /tmp
      - name: Start minikube
        uses: medyagh/setup-minikube@3213bac7294895b1d92c1f4db1f99c91a308efaf
        with:
          cpus: max
          memory: max
      - name: Run Tests
        run: |
          export SHELL=/bin/bash
          export QUAY_USERNAME=minikube

          eval $(minikube -p minikube docker-env)

          docker load --input /tmp/controller.tar
          docker load --input /tmp/cache.tar
          docker load --input /tmp/build-request-processor.tar

          ./deploy/minikube-ci.sh
          make minikube-test
  run-gav-based-tests:
    strategy:
      matrix:
        gavs:
          - "commons-collections:commons-collections:3.2.2,org.apache.commons:commons-lang3:3.12.0"
          - "org.xerial.snappy:snappy-java:1.1.8.4,org.lz4:lz4-java:1.8.0"
    needs: [build-build-request-processor, build-cache, build-controller]
    runs-on: ubuntu-latest
    name: Minikube GAV Matrix
    steps:
      - uses: actions/checkout@v2
      - name: Download Cache
        uses: actions/download-artifact@v3
        with:
          name: cache
          path: /tmp
      - name: Download Build Request Proessor
        uses: actions/download-artifact@v3
        with:
          name: build-request-processor
          path: /tmp
      - name: Download Controller
        uses: actions/download-artifact@v3
        with:
          name: controller
          path: /tmp
      - name: Start minikube
        uses: medyagh/setup-minikube@master
        with:
          cpus: max
          memory: max
      - name: Run Tests
        run: |
          export SHELL=/bin/bash
          export QUAY_USERNAME=minikube

          eval $(minikube -p minikube docker-env)

          docker load --input /tmp/controller.tar
          docker load --input /tmp/cache.tar
          docker load --input /tmp/build-request-processor.tar

          export GAVS=${{ matrix.gavs }}

          ./deploy/minikube-ci.sh
          make minikube-test
